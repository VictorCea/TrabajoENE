package com.aiep.ene.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProveedorAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProveedorAllPropertiesEquals(Proveedor expected, Proveedor actual) {
        assertProveedorAutoGeneratedPropertiesEquals(expected, actual);
        assertProveedorAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProveedorAllUpdatablePropertiesEquals(Proveedor expected, Proveedor actual) {
        assertProveedorUpdatableFieldsEquals(expected, actual);
        assertProveedorUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProveedorAutoGeneratedPropertiesEquals(Proveedor expected, Proveedor actual) {
        assertThat(expected)
            .as("Verify Proveedor auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProveedorUpdatableFieldsEquals(Proveedor expected, Proveedor actual) {
        assertThat(expected)
            .as("Verify Proveedor relevant properties")
            .satisfies(e -> assertThat(e.getNombre()).as("check nombre").isEqualTo(actual.getNombre()))
            .satisfies(e -> assertThat(e.getDireccion()).as("check direccion").isEqualTo(actual.getDireccion()))
            .satisfies(e -> assertThat(e.getEmail()).as("check email").isEqualTo(actual.getEmail()))
            .satisfies(e -> assertThat(e.getFono()).as("check fono").isEqualTo(actual.getFono()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProveedorUpdatableRelationshipsEquals(Proveedor expected, Proveedor actual) {
        // empty method
    }
}
